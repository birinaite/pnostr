const dropZone=document.getElementById("dropZone");const fileInput=document.getElementById("fileInput");const uploadButton=document.getElementById("uploadAndPublish");const statusMessage=document.getElementById("statusMessage");const lastPostIdElement=document.getElementById("lastPostId");dropZone.addEventListener("click",()=>fileInput.click());dropZone.addEventListener("dragover",event=>{event.preventDefault();dropZone.style.backgroundColor="#e0e0e0"});dropZone.addEventListener("dragleave",()=>{dropZone.style.backgroundColor="#fff"});dropZone.addEventListener("drop",event=>{event.preventDefault();dropZone.style.backgroundColor="#fff";const file=event.dataTransfer.files[0];fileInput.files=event.dataTransfer.files;if(file){dropZone.querySelector("p").textContent=`Arquivo selecionado: ${file.name}`}});fileInput.addEventListener("change",()=>{const file=fileInput.files[0];if(file){dropZone.querySelector("p").textContent=`Arquivo selecionado: ${file.name}`}});uploadButton.addEventListener("click",async function(){const file=fileInput.files[0];if(!file){alert("Por favor, selecione um arquivo.");return}const fileType=file.type;const allowedImageTypes=["image/jpeg","image/png"];uploadButton.style.display="none";statusMessage.innerText="Enviando arquivo...";const nsecPrivateKey=NostrTools.nip19.nsecEncode(NostrTools.generateSecretKey());const{type,data:privateKeyHex}=NostrTools.nip19.decode(nsecPrivateKey);if(type!=="nsec"){console.error("Chave privada inválida.");return}const reader=new FileReader;reader.onload=async function(event){if(allowedImageTypes.includes(fileType)){const img=new Image;img.src=event.target.result;img.onload=async function(){const canvas=document.createElement("canvas");const ctx=canvas.getContext("2d");const maxWidth=800;const maxHeight=800;let width=img.width;let height=img.height;if(width>height){if(width>maxWidth){height*=maxWidth/width;width=maxWidth}}else{if(height>maxHeight){width*=maxHeight/height;height=maxHeight}}canvas.width=width;canvas.height=height;ctx.drawImage(img,0,0,width,height);canvas.toBlob(async function(blob){const arrayBuffer=await blob.arrayBuffer();processFile(arrayBuffer,fileType,privateKeyHex)},"image/jpeg")}}else{const arrayBuffer=await file.arrayBuffer();processFile(arrayBuffer,fileType,privateKeyHex)}};reader.readAsDataURL(file)});async function processFile(arrayBuffer,fileType,privateKeyHex){const base64String=arrayBufferToBase64(arrayBuffer);const maxChunkSizeKB=60;const maxChunkSize=maxChunkSizeKB*1024;const totalChunks=Math.ceil(base64String.length/maxChunkSize);const eventIds=[];const hellLay=["wss://relay.primal.net"];const connect=hellLay[Math.floor(Math.random()*hellLay.length)];const relay=await NostrTools.Relay.connect(connect);console.log(`Conectado ao ${relay.url}`);for(let i=0;i<totalChunks;i++){const start=i*maxChunkSize;const end=Math.min(start+maxChunkSize,base64String.length);const base64Chunk=base64String.slice(start,end);const eventTemplate={kind:1,created_at:Math.floor(Date.now()/1e3),tags:[],content:base64Chunk};const signedEvent=NostrTools.finalizeEvent(eventTemplate,privateKeyHex);await relay.publish(signedEvent);eventIds.push(signedEvent.id);console.log(`Fragmento ${i+1} de ${totalChunks} publicado.`);statusMessage.innerText=`Enviando fragmento ${i+1} de ${totalChunks} do arquivo...`}const base64Ids=btoa(JSON.stringify(eventIds));const indexChunkSize=5e4;const totalIdChunks=Math.ceil(base64Ids.length/indexChunkSize);const finalEventIds=[];let lastId=null;for(let i=0;i<totalIdChunks;i++){const start=i*indexChunkSize;const end=Math.min(start+indexChunkSize,base64Ids.length);const idChunk=base64Ids.slice(start,end);const tags=[];if(lastId){tags.push(["e",lastId])}if(i===totalIdChunks-1){tags.push(["m",fileType])}const idEventTemplate={kind:1,created_at:Math.floor(Date.now()/1e3),tags:tags,content:idChunk};const signedIdEvent=NostrTools.finalizeEvent(idEventTemplate,privateKeyHex);await relay.publish(signedIdEvent);finalEventIds.push(signedIdEvent.id);lastId=signedIdEvent.id;console.log(`Fragmento de ID ${i+1} de ${totalIdChunks} publicado.`);statusMessage.innerText=`Enviando fragmento ${i+1} de ${totalIdChunks} do índice...`}const lastPostId=finalEventIds[finalEventIds.length-1];const key=JSON.stringify({relay:connect,id:lastPostId});const encoder=new TextEncoder;const bytes=btoa(String.fromCharCode(...encoder.encode(key)));lastPostIdElement.innerHTML=`ID da última postagem de fragmento de IDs: ${lastPostId}<br><a class="listen-link" href="./?id=${bytes}" target="_blank">ABRIR</a>`;console.log("ID da última postagem de fragmento de IDs:",lastPostId);statusMessage.innerText="Envio concluído!";fileInput.value="";dropZone.querySelector("p").textContent="Arraste a imagem aqui ou clique para selecionar";uploadButton.style.display="inline-block";relay.close();console.log("Conexão com o relay fechada.")}function arrayBufferToBase64(buffer){let binary="";const bytes=new Uint8Array(buffer);const len=bytes.byteLength;for(let i=0;i<len;i++){binary+=String.fromCharCode(bytes[i])}return btoa(binary)}
